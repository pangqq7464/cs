<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
    <!-- 启动spring注解 -->
    <context:annotation-config/>
    <!-- 扫描注解所在的包 -->
    <context:component-scan base-package="edu.pry">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ExceptionHandler"/>
    </context:component-scan>
    <!-- 个人建议[启动aop注解] -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!--  配置数据源 -->
    <context:property-placeholder location="classpath:/jdbc.properties"/>
    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
        destroy-method="close">
       <property name="driverClassName" value="${jdbc.mysql.driver}"/>
        <property name="url" value="${jdbc.mysql.url}"/>
        <property name="username" value="${jdbc.mysql.username}"/>
        <property name="password" value="${jdbc.mysql.password}"/>
    </bean>
    <!-- spring收回mybatis权利 -->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 加载mybatis核心配置文件 -->
        <property name="configLocation" value="classpath:/mybatis-config.xml"></property>
        <!-- 加载映射文件 -->
        <property name="mapperLocations" value="classpath*:/edu/**/model/*Mapper.xml"></property>
        <!-- 配置数据源 -->
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!-- 接口代理方式 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage">
            <value>
                edu.**.mapper
            </value>
        </property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"></property>
    </bean>
    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
     <!-- 配置json转换器 -->
    <bean id="jsonMessageConverters" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
         <property name="supportedMediaTypes">
             <list>
                <value>application/json;charset=UTF-8</value>
             </list>
         </property>
    </bean>
    <!-- 配置哪些方法需要事务 -->
    <tx:advice id="methodAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED"/>
            <!-- <tx:method name="sel*" read-only="true"/>
            <tx:method name="que*" read-only="true"/>
            <tx:method name="load*" read-only="true"/> -->
        </tx:attributes>
    </tx:advice>
    <!-- 通过aop确定那个层次的方法需要事务 -->
    <aop:config>
        <aop:pointcut expression="execution(* edu..*Service.*(..))" id="servicePointcut"/>
        <aop:advisor advice-ref="methodAdvice" pointcut-ref="servicePointcut"/>
    </aop:config>
    <!-- 可选[jdbc] -->
    <!-- <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean> -->
</beans>
